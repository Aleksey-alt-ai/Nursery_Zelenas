{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u0418\\\\Documents\\\\GitHub\\\\Nursery_Zelenas\\\\client\\\\src\\\\components\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { CircularProgress, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading,\n    isAuthenticated\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Проверяем, что пользователь аутентифицирован И имеет роль owner\n  // И что токен начинается с 'mock-token-' (значит прошел через страницу входа)\n  const token = localStorage.getItem('token');\n  const isValidToken = token && token.startsWith('mock-token-');\n\n  // Дополнительная проверка - проверяем, что пользователь действительно прошел через страницу входа\n  const hasVisitedLogin = sessionStorage.getItem('hasVisitedLogin');\n  console.log('AdminRoute check:', {\n    isAuthenticated,\n    userRole: user === null || user === void 0 ? void 0 : user.role,\n    isValidToken,\n    hasVisitedLogin,\n    token\n  });\n  if (!isAuthenticated || (user === null || user === void 0 ? void 0 : user.role) !== 'owner' || !isValidToken || !hasVisitedLogin) {\n    console.log('Redirecting to login');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"6p8hbW7qQFb//Z8SqvljA2tLdrc=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","CircularProgress","Box","jsxDEV","_jsxDEV","AdminRoute","children","_s","user","loading","isAuthenticated","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","token","localStorage","getItem","isValidToken","startsWith","hasVisitedLogin","sessionStorage","console","log","userRole","role","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/ИИ/Documents/GitHub/Nursery_Zelenas/client/src/components/AdminRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { CircularProgress, Box } from '@mui/material';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const { user, loading, isAuthenticated } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box \r\n        display=\"flex\" \r\n        justifyContent=\"center\" \r\n        alignItems=\"center\" \r\n        minHeight=\"100vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Проверяем, что пользователь аутентифицирован И имеет роль owner\r\n  // И что токен начинается с 'mock-token-' (значит прошел через страницу входа)\r\n  const token = localStorage.getItem('token');\r\n  const isValidToken = token && token.startsWith('mock-token-');\r\n  \r\n  // Дополнительная проверка - проверяем, что пользователь действительно прошел через страницу входа\r\n  const hasVisitedLogin = sessionStorage.getItem('hasVisitedLogin');\r\n  \r\n  console.log('AdminRoute check:', {\r\n    isAuthenticated,\r\n    userRole: user?.role,\r\n    isValidToken,\r\n    hasVisitedLogin,\r\n    token\r\n  });\r\n  \r\n  if (!isAuthenticated || user?.role !== 'owner' || !isValidToken || !hasVisitedLogin) {\r\n    console.log('Redirecting to login');\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,gBAAgB,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;EAEpD,IAAIS,OAAO,EAAE;IACX,oBACEL,OAAA,CAACF,GAAG;MACFS,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,OAAO;MAAAR,QAAA,eAEjBF,OAAA,CAACH,gBAAgB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,YAAY,GAAGH,KAAK,IAAIA,KAAK,CAACI,UAAU,CAAC,aAAa,CAAC;;EAE7D;EACA,MAAMC,eAAe,GAAGC,cAAc,CAACJ,OAAO,CAAC,iBAAiB,CAAC;EAEjEK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE;IAC/BjB,eAAe;IACfkB,QAAQ,EAAEpB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqB,IAAI;IACpBP,YAAY;IACZE,eAAe;IACfL;EACF,CAAC,CAAC;EAEF,IAAI,CAACT,eAAe,IAAI,CAAAF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqB,IAAI,MAAK,OAAO,IAAI,CAACP,YAAY,IAAI,CAACE,eAAe,EAAE;IACnFE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,oBAAOvB,OAAA,CAACL,QAAQ;MAAC+B,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,OAAOZ,QAAQ;AACjB,CAAC;AAACC,EAAA,CAtCIF,UAAU;EAAA,QAC6BL,OAAO;AAAA;AAAAgC,EAAA,GAD9C3B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}